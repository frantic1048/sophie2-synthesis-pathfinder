#!/usr/bin/env python3

import sys
import csv
import pprint
import json


def usage():
    print(
        "Usage:\n\t",
        sys.argv[0],
        '"Atelier Sophie 2 - Item Data.csv" "Atelier Sophie 2 - Item Effects.csv"',
    )


# Item Effects table, Item Data table
# (Dragon Mat.)    -> (dragon-mat)
def normalize_ingredient(input):
    return str.lower(input).replace(".)", ")").replace(" ", "-")


def is_category_ingredient(input):
    return input.startswith("(")


edges = {}
items = {}

if __name__ == "__main__":
    if len(sys.argv) != 3:
        usage()
        sys.exit(1)

    item_data_file_name = sys.argv[1]
    item_effect_file_name = sys.argv[2]
    with open(item_data_file_name, newline="") as csvfile:
        spamreader = csv.reader(csvfile)
        for row in [r for r in spamreader if r[0] != ""][0:]:
            name = row[0]
            kind = row[4]
            cat = [c for c in row[5:9] if c != ""]
            items[name] = {"id": name, "name": name, "kind": kind, "categoryList": cat}

    with open(item_effect_file_name, newline="") as csvfile:
        spamreader = csv.reader(csvfile)
        for row in [r for r in spamreader if r[1] != "" and r[5] != ""][1:]:
            item = row[1]
            ingredient = normalize_ingredient(row[5])

            items[item]["isSynthesizable"] = True
            isCategory = is_category_ingredient(ingredient)
            if isCategory:
                items[ingredient] = {
                    "id": ingredient,
                    "name": ingredient,
                    "isCategory": True,
                }
            edge_id = "edge__" + item + "__" + ingredient
            edges[edge_id] = {
                "id": edge_id,
                "source": item,
                "target": ingredient,
                "hasCategory": isCategory,
            }

    print(
        "// Generated by "
        + sys.argv[0]
        + "\n// DO NOT EDIT BY HAND!\nexport const data=`"
        + json.dumps({"items": items, "edges": edges})
        + "`"
    )
